name: Build

on: [push]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: [3.8]

    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-go@v2
      with:
        go-version: '^1.14.0'
    - name: Install Go dependencies
      run: |
        sudo apt update -qq && sudo apt install gccgo libzmq3-dev
    - name: Set up Python ${{ matrix.python_version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python_version }}
    - name: Cache pre-commit setup
      id: wheel-cache
      uses: actions/cache@v1
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-cp${{ matrix.python_version }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
        restore-keys: |
          ${{ runner.os }}-cp${{ matrix.python_version }}-pre-commit-
    - name: Install pre-commit
      run: |
        python -m pip install --upgrade pip
        pip install pre-commit==2.6.0
    - name: Generate .netrc file
      run: |
        bash make-netrc.sh > $HOME/.netrc
      env:
        GIT_TOKEN: ${{ secrets.GIT_DEPLOY_TOKEN}}
        GIT_USER: "o-c-bot"
    - name: Run pre-commit
      run: |
        pre-commit run --all-files

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.14.0'
      - name: Install Go dependencies
        run: |
            sudo apt update -qq && sudo apt install gccgo libzmq3-dev
      - name: Generate .netrc file
        run: |
          bash make-netrc.sh > $HOME/.netrc
        env:
          GIT_TOKEN: ${{ secrets.GIT_DEPLOY_TOKEN}}
          GIT_USER: "o-c-bot"
      - name: Go Test
        run: GOPRIVATE=github.com go test -cover -v ./pkg/...

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/checkout@v2
      with:
        repository: onlinecity/action-docker-build
        ref: v2
        path: actions-build
        token: ${{ secrets.GIT_DEPLOY_TOKEN }}
    - uses: ./actions-build
      with:
        repository: ${{ github.repository }}
        gcloud: ${{ secrets.GCLOUD_SERVICE_KEY }}
        pip_index_url: ${{ secrets.PIP_INDEX_URL }}
        git_deploy_token: ${{ secrets.GIT_DEPLOY_TOKEN }}

  deploy:
    # This job exists only to wait on the above jobs.
    runs-on: ubuntu-latest
    needs: [lint,test,build]
    steps:
      - uses: actions/checkout@v2
